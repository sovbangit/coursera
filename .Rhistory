library(DBI)
con <- dbConnect(odbc::odbc(),"coc_mysql")
data <- dbGetQuery(con,"select * from sample")
# Query the database and put the results into the data frame "dataframe"
dataframe <- sqlQuery(con,"select * from sample")
dataframe <- dbGetQuery(con,"select * from sample")
data <- dbGetQuery(con,"select * from sample")
data <- dbGetQuery(con,"select * from sample")
data <- dbGetQuery(con,"select * from sample")
detach("package:DBI", unload=TRUE)
library("DBI", lib.loc="~/R/win-library/3.4")
con <- dbConnect(odbc::odbc(),"coc_mysql")
data <- dbGetQuery(con,"select * from sample")
data
detach("package:DBI", unload=TRUE)
library("DBI", lib.loc="~/R/win-library/3.4")
detach("package:DBI", unload=TRUE)
library("DBI", lib.loc="~/R/win-library/3.4")
con <- dbConnect(odbc::odbc(),"coc_mysql")
data <- dbConnect(con,"select * from sample")
data <- dbConnect(con,"select * from sample")
data <- dbGetQuery(con,"select * from sample")
data
detach("package:DBI", unload=TRUE)
library("DBI", lib.loc="~/R/win-library/3.4")
con <- dbConnect(odbc::odbc(), "coc_mysql")
data <- dbGetQuery(con,"select * from sample")
data
index <- 1;
count <- 6
while (index< count)
{}
>
> lupe <- 1;
> x <- 1
> while(x < 4)
{
x <- rnorm(1,mean=2,sd=3)
cat("trying this value: ",x," (",lupe," times in loop)\n");
lupe <- lupe + 1
}
{
x <- rnorm(1,mean=2,sd=3)
cat("trying this value: ",x," (",lupe," times in loop)\n");
lupe <- lupe + 1
}
cat("\nMean risk-taking scores for all groups\n\n")
index <- index + 1;
cat("\nMean risk-taking scores for all groups\n\n")
index <- 1;
count <-10;
while (index<count) {
cat(index," I am in loop")
index <- index + 1;
}
while (index<count) {
cat(index," I am in loop")
cat("/n")
index <- index + 1;
}
cat("\nMean risk-taking scores for all groups\n\n")
index <- 1;
count <-10;
while (index<count) {
cat(index," I am in loop")
cat("/n")
index <- index + 1;
}
cat("\nMean risk-taking scores for all groups\n\n")
index <- 1;
count <-10;
while (index<count) {
cat(index," I am in loop")
cat("\n")
index <- index + 1;
}
cat("\n Author: Sourav Banerjee\n\n")
cat("\n Author: Sourav Banerjee\n\n")
index <- 1;
count <-10;
while (index<count) {
cat(" Sourav Banrerjee am in iteration", index)
cat("\n")
index <- index + 1;
}
index <- index + 1;
cat("\n Author: Sourav Banerjee\n\n")
name.function <- function(param1, param2)
{
index <- param1;
count <-param2;
while (index<count) {
cat(" Sourav Banrerjee am in iteration", index)
cat("\n")
index <- index + 1;
}
}
name.function(1,100);
else
cat("\n Author: Sourav Banerjee\n\n")
# Create a basic function which will write some text in loop
print.loop.function <- function(param1, param2)
{
index <- param1;
count <-param2;
while (index<count) {
if(index % 2 = 0)
{
cat("Gold Class: Iteration", index)
}
else
{
cat("Silver Class: Iteration", index)
}
cat("\n")
index <- index + 1;
}
}
# call function
print.loop.function(1,100);
cat("\n Author: Sourav Banerjee\n\n")
# Create a basic function which will write some text in loop
print.loop.function <- function(param1, param2)
{
index <- param1;
count <-param2;
while (index<count) {
if(index % 2 == 0)
{
cat("Gold Class: Iteration", index)
}
else
{
cat("Silver Class: Iteration", index)
}
cat("\n")
index <- index + 1;
}
}
# call function
print.loop.function(1,100);
cat("Silver Class: Iteration", index);
cat("\n Author: Sourav Banerjee\n\n")
# Create a basic function which will write some text in loop
print.loop.function <- function(param1, param2)
{
index <- param1;
count <-param2;
while (index<count) {
if(index % 2 == 0)
{
cat("Gold Class: Iteration", index);
}
else
{
cat("Silver Class: Iteration", index);
}
cat("\n")
index <- index + 1;
}
}
# call function
print.loop.function(1,100);
cat("\n Author: Sourav Banerjee\n\n")
# Create a basic function which will write some text in loop
print.loop.function <- function(param1, param2)
{
index <- param1;
count <-param2;
while (index<count) {
if(index %% 2 == 0)
{
cat("Gold Class: Iteration", index);
}
else
{
cat("Silver Class: Iteration", index);
}
cat("\n")
index <- index + 1;
}
}
# call function
print.loop.function(1,100);
cat("\n Author: Sourav Banerjee\n\n")
# Create a basic function which will write some text in loop
print.loop.function <- function(param1, param2)
{
index <- param1;
count <-param2;
while (index<count) {
if(index %% 2 == 0)
{
cat("Gold Class: Iteration", index);
}
else
{
cat("Silver Class: Iteration", index);
}
cat("\n")
index <- index + 1;
}
}
# call function
print.loop.function(1,100);
else
cat("\n Author: Sourav Banerjee\n\n")
# Create a basic function which will write some text in loop
print.loop.function <- function(param1, param2)
{
index <- param1;
count <-param2;
while (index<count) {
if(index %% 2 == 0)
{
cat("Gold Class: Iteration", index);
}
else
{
cat("Silver Class: Iteration", index);
}
cat("\n")
index <- index + 1;
}
}
# call function
print.loop.function(1,10);
cat("\n Author: Sourav Banerjee\n\n")
# Create a basic function which will write some text in loop
print.loop.function <- function(param1, param2)
{
index <- param1;
count <-param2;
while (index<count) {
if(index %% 2 == 0)
{
cat("Gold Class: Iteration", index);
}
else
{
cat("Silver Class: Iteration", index);
}
cat("\n")
index <- index + 1;
}
}
# call function
print.loop.function(1,10);
cat("\n Author: Sourav Banerjee\n\n")
# Create a basic function which will write some text in loop
print.loop.function <- function(param1, param2)
{
index <- param1;
count <-param2;
while (index<count) {
if(index %% 2 == 0)
{
cat("Gold Class: Iteration", index);
}
else
{
cat("Silver Class: Iteration", index);
}
cat("\n")
index <- index + 1;
}
}
# call function
print.loop.function(1,10);
getwd()
getwd()
setwd("C:\Projects\coursera");
getwd();
getwd()
setwd("C:/Projects/coursera");
getwd();
getwd()
setwd("C:/Projects/coursera");
getwd();
data <- "happy coding from Sourav!"
save(data)
getwd()
setwd("C:/Projects/coursera");
getwd();
data <- "happy coding from Sourav!"
save(data,cat(getwd(),"/myfile.txt"))
getwd();
setwd("C:/Projects/coursera");
getwd();
data <- "happy coding from Sourav!";
filepath <- cat(getwd(),"/myfile.txt";
save(data,filepath));
getwd();
setwd("C:/Projects/coursera");
getwd();
data <- "happy coding from Sourav!";
rootpath <- getwd();
filepath <- cat(rootpath,"/myfile.txt";
save(data,filepath));
getwd();
setwd("C:/Projects/coursera");
getwd();
data <- "happy coding from Sourav!";
rootpath <- getwd();
print(rootpath);
filepath <- cat(rootpath,"/myfile.txt";
save(data,filepath));
getwd();
setwd("C:/Projects/coursera");
data <- "happy coding from Sourav!";
rootpath <- getwd();
print(rootpath);
filepath <- cat(rootpath,"/myfile.txt";
save(data,filepath));
getwd();
setwd("C:/Projects/coursera");
data <- "happy coding from Sourav!";
rootpath <- getwd();
print(rootpath);
filepath <- cat(rootpath,"/myfile.txt");
save(data,filepath));
# returns string w/o leading or trailing whitespace
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
setwd("C:/Projects/coursera");
data <- "happy coding from Sourav!";
rootpath <- getwd();
print(trim(rootpath);
filepath <- cat(rootpath,"/myfile.txt");
save(data,filepath));
# returns string w/o leading or trailing whitespace
trim <- function (x) gsub("^\\s+|\\s+$", "", x);
setwd("C:/Projects/coursera");
data <- "happy coding from Sourav!";
rootpath <- getwd();
print(trim(rootpath);
filepath <- cat(rootpath,"/myfile.txt");
save(data,filepath));
# returns string w/o leading or trailing whitespace
trim <- function (x) gsub("^\\s+|\\s+$", "", x);
setwd("C:/Projects/coursera");
data <- "happy coding from Sourav!";
rootpath <- getwd();
print(trim(rootpath));
filepath <- cat(rootpath,"/myfile.txt");
save(data,filepath));
# returns string w/o leading or trailing whitespace
trim <- function (x) gsub("^\\s+|\\s+$", "", x);
setwd("C:/Projects/coursera");
data <- "happy coding from Sourav!";
rootpath <- trim(getwd());
filepath <- cat(rootpath,"/myfile.txt");
save(data,filepath));
# returns string w/o leading or trailing whitespace
trim <- function (x) gsub("^\\s+|\\s+$", "", x);
setwd("C:/Projects/coursera");
data <- "happy coding from Sourav!";
rootpath <- getwd();
rootpathcln <- trim(rootpath);
filepath <- cat(rootpathcln,"/myfile.txt");
save(data,filepath));
source('C:/Projects/coursera/rpro.r')
# returns string w/o leading or trailing whitespace
trim <- function (x) gsub("^\\s+|\\s+$", "", x);
setwd("C:/Projects/coursera");
data <- "happy coding from Sourav!";
rootpath <- getwd();
rootpathcln <- trim(rootpath);
filepath <- cat(rootpathcln,"/myfile.txt");
save(data,filepath);
save(data,filepath);
save(data,filepath);
save(data,filepath);
print(filepath);
# returns string w/o leading or trailing whitespace
trim <- function (x) gsub("^\\s+|\\s+$", "", x);
setwd("C:/Projects/coursera");
data <- "happy coding from Sourav!";
rootpath <- getwd();
rootpathcln <- trim(rootpath);
filepath <- cat(rootpathcln,"/myfile.txt");
print(filepath);
save(data,filepath);
# returns string w/o leading or trailing whitespace
trim <- function (x) gsub("^\\s+|\\s+$", "", x);
setwd("C:/Projects/coursera");
data <- "happy coding from Sourav!";
rootpath <- getwd();
rootpathcln <- trim(rootpath);
filepath <- cat(rootpathcln,"/myfile.txt");
print(filepath);
save(data,filepath);
# returns string w/o leading or trailing whitespace
trim <- function (x) gsub("^\\s+|\\s+$", "", x);
setwd("C:/Projects/coursera");
data <- "happy coding from Sourav!";
rootpath <- getwd();
rootpathcln <- trim(rootpath);
print(rootpathcln);
filepath <- cat(rootpathcln,"/myfile.txt");
print(filepath);
save(data,filepath);
# returns string w/o trailing whitespace
trim.trailing <- function (x) sub("\\s+$", "", x)
setwd("C:/Projects/coursera");
data <- "happy coding from Sourav!";
rootpath <- getwd();
rootpathcln <- trim.trailing(rootpath);
print(rootpathcln);
filepath <- cat(rootpathcln,"/myfile.txt");
print(filepath);
save(data,filepath);
# returns string w/o trailing whitespace
trim.trailing <- function (x) sub("\\s+$", "", x)
setwd("C:/Projects/coursera");
data <- "happy coding from Sourav!";
rootpath <- getwd();
rootpathcln <- trim.trailing(rootpath);
print(rootpathcln);
filepath <- path.cat(rootpathcln,"/myfile.txt");
print(filepath);
save(data,filepath);
# returns string w/o trailing whitespace
trim.trailing <- function (x) sub("\\s+$", "", x)
setwd("C:/Projects/coursera");
data <- "happy coding from Sourav!";
rootpath <- getwd();
rootpathcln <- trim.trailing(rootpath);
print(rootpathcln);
filepath <- path.cat(rootpathcln,"C:/Projects/coursera/myfile.txt");
print(filepath);
save(data,filepath);
# returns string w/o trailing whitespace
trim.trailing <- function (x) sub("\\s+$", "", x)
setwd("C:/Projects/coursera");
data <- "happy coding from Sourav!";
rootpath <- getwd();
rootpathcln <- trim.trailing(rootpath);
print(rootpathcln);
filepath <- path.cat(rootpathcln,"C:\Projects\coursera\myfile.txt");
print(filepath);
save(data,filepath);
source('C:/Projects/coursera/rpro.r')
# returns string w/o trailing whitespace
trim.trailing <- function (x) sub("\\s+$", "", x)
setwd("C:/Projects/coursera");
data <- "happy coding from Sourav!";
rootpath <- getwd();
rootpathcln <- trim.trailing(rootpath);
print(rootpathcln);
filepath <- path.cat(rootpathcln,"C:\Projects\coursera\new.txt");
print(filepath);
save(data,filepath);
# returns string w/o trailing whitespace
trim.trailing <- function (x) sub("\\s+$", "", x)
setwd("C:/Projects/coursera");
data <- "happy coding from Sourav!";
rootpath <- getwd();
rootpathcln <- trim.trailing(rootpath);
print(rootpathcln);
# returns string w/o trailing whitespace
trim.trailing <- function (x) sub("\\s+$", "", x)
setwd("C:/Projects/coursera");
data <- "happy coding from Sourav!";
rootpath <- getwd();
rootpathcln <- trim.trailing(rootpath);
print(rootpathcln);
# Writing mtcars data
write.table(mtcars, file = "mtcars.txt", sep = "\t",
row.names = TRUE, col.names = NA)
# set working directory
setwd("C:/Projects/coursera");
data <- "happy coding from Sourav!";
rootpath <- getwd();
rootpathcln <- trim.trailing(rootpath);
print(rootpathcln);
# Writing mtcars data
write.table(mtcars, file = "mtcars.txt", sep = "\t",
row.names = TRUE, col.names = NA)
# set working directory
setwd("C:/Projects/coursera");
# get working folder
rootpath <- getwd();
# print path
print(rootpath);
# Writing mtcars data
write.table(mtcars, file = "mtcars.txt", sep = "\t",
row.names = TRUE, col.names = NA)
source('C:/Projects/coursera/rpro.r')
